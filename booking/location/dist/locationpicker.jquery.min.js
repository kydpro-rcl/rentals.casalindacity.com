/*!jquery-locationpicker-v0.1.15-2016-09-26*/!function(a){
	functionb(a,
	b){
		varc=newgoogle.maps.Map(a,
		b),
		d=newgoogle.maps.Marker({
			position: newgoogle.maps.LatLng(54.19335,
			-3.92695),
			map: c,
			title: "Drag Me",
			visible: b.markerVisible,
			draggable: b.markerDraggable,
			icon: void0!==b.markerIcon?b.markerIcon: void0
		});return{
			map: c,
			marker: d,
			circle: null,
			location: d.position,
			radius: b.radius,
			locationName: b.locationName,
			addressComponents: {
				formatted_address: null,
				addressLine1: null,
				addressLine2: null,
				streetName: null,
				streetNumber: null,
				city: null,
				district: null,
				state: null,
				stateOrProvince: null
			},
			settings: b.settings,
			domContainer: a,
			geodecoder: newgoogle.maps.Geocoder
		}
	}functionc(a){
		returnvoid0!=d(a)
	}functiond(b){
		returna(b).data("locationpicker")
	}functione(a,
	b){
		if(a){
			varc=i.locationFromLatLng(b.marker.position);a.latitudeInput&&a.latitudeInput.val(c.latitude).change(),
			a.longitudeInput&&a.longitudeInput.val(c.longitude).change(),
			a.radiusInput&&a.radiusInput.val(b.radius).change(),
			a.locationNameInput&&a.locationNameInput.val(b.locationName).change()
		}
	}functionf(b,
	c){
		if(b){
			if(b.radiusInput&&b.radiusInput.on("change",
			function(b){
				vard=a(this).val();b.originalEvent&&!isNaN(d)&&(c.radius=d,
				i.setPosition(c,
				c.location,
				function(a){
					a.settings.onchanged.apply(c.domContainer,
					[i.locationFromLatLng(a.location),
					a.radius,
					!1])
				}))
			}),
			b.locationNameInput&&c.settings.enableAutocomplete){
				vard=!1;c.autocomplete=newgoogle.maps.places.Autocomplete(b.locationNameInput.get(0),
				c.settings.autocompleteOptions),
				google.maps.event.addListener(c.autocomplete,
				"place_changed",
				function(){
					d=!1;vara=c.autocomplete.getPlace();returna.geometry?voidi.setPosition(c,
					a.geometry.location,
					function(a){
						e(b,
						a),
						a.settings.onchanged.apply(c.domContainer,
						[i.locationFromLatLng(a.location),
						a.radius,
						!1])
					}): voidc.settings.onlocationnotfound(a.name)
				}),
				c.settings.enableAutocompleteBlur&&(b.locationNameInput.on("change",
				function(a){
					a.originalEvent&&(d=!0)
				}),
				b.locationNameInput.on("blur",
				function(f){
					f.originalEvent&&setTimeout(function(){
						varf=a(b.locationNameInput).val();f.length>5&&d&&(d=!1,
						c.geodecoder.geocode({
							address: f
						},
						function(a,
						d){
							d==google.maps.GeocoderStatus.OK&&a&&a.length&&i.setPosition(c,
							a[0].geometry.location,
							function(a){
								e(b,
								a),
								a.settings.onchanged.apply(c.domContainer,
								[i.locationFromLatLng(a.location),
								a.radius,
								!1])
							})
						}))
					},
					1e3)
				}))
			}b.latitudeInput&&b.latitudeInput.on("change",
			function(b){
				vard=a(this).val();b.originalEvent&&!isNaN(d)&&i.setPosition(c,
				newgoogle.maps.LatLng(d,
				c.location.lng()),
				function(a){
					a.settings.onchanged.apply(c.domContainer,
					[i.locationFromLatLng(a.location),
					a.radius,
					!1]),
					e(c.settings.inputBinding,
					c)
				})
			}),
			b.longitudeInput&&b.longitudeInput.on("change",
			function(b){
				vard=a(this).val();b.originalEvent&&!isNaN(d)&&i.setPosition(c,
				newgoogle.maps.LatLng(c.location.lat(),
				d),
				function(a){
					a.settings.onchanged.apply(c.domContainer,
					[i.locationFromLatLng(a.location),
					a.radius,
					!1]),
					e(c.settings.inputBinding,
					c)
				})
			})
		}
	}functiong(a){
		google.maps.event.trigger(a.map,
		"resize"),
		setTimeout(function(){
			a.map.setCenter(a.marker.position)
		},
		300)
	}functionh(b,
	c,
	d){
		vare=a.extend({
			
		},
		a.fn.locationpicker.defaults,
		d),
		g=e.location.latitude,
		h=e.location.longitude,
		j=e.radius,
		k=b.settings.location.latitude,
		l=b.settings.location.longitude,
		m=b.settings.radius;(g!=k||h!=l||j!=m)&&(b.settings.location.latitude=g,
		b.settings.location.longitude=h,
		b.radius=j,
		i.setPosition(b,
		newgoogle.maps.LatLng(b.settings.location.latitude,
		b.settings.location.longitude),
		function(a){
			f(b.settings.inputBinding,
			b),
			a.settings.oninitialized(c)
		}))
	}vari={
		drawCircle: function(b,
		c,
		d,
		e){
			returnnull!=b.circle&&b.circle.setMap(null),
			d>0?(d*=1,
			e=a.extend({
				strokeColor: "#0000FF",
				strokeOpacity: .35,
				strokeWeight: 2,
				fillColor: "#0000FF",
				fillOpacity: .2
			},
			e),
			e.map=b.map,
			e.radius=d,
			e.center=c,
			b.circle=newgoogle.maps.Circle(e),
			b.circle): null
		},
		setPosition: function(a,
		b,
		c){
			a.location=b,
			a.marker.setPosition(b),
			a.map.panTo(b),
			this.drawCircle(a,
			b,
			a.radius,
			{
				
			}),
			a.settings.enableReverseGeocode?this.updateLocationName(a,
			c): c&&c.call(this,
			a)
		},
		locationFromLatLng: function(a){
			return{
				latitude: a.lat(),
				longitude: a.lng()
			}
		},
		addressByFormat: function(a,
		b){
			for(varc=null,
			d=a.length-1;d>=0;d--)a[d].types.indexOf(b)>=0&&(c=a[d]);returnc||a[0]
		},
		updateLocationName: function(a,
		b){
			a.geodecoder.geocode({
				latLng: a.marker.position
			},
			function(c,
			d){
				if(d==google.maps.GeocoderStatus.OK&&c.length>0){
					vare=i.addressByFormat(c,
					a.settings.addressFormat);a.locationName=e.formatted_address,
					a.addressComponents=i.address_component_from_google_geocode(e.address_components)
				}elseif(d==google.maps.GeocoderStatus.OVER_QUERY_LIMIT)returnsetTimeout(function(){
					i.updateLocationName(a,
					b)
				},
				1e3);b&&b.call(this,
				a)
			})
		},
		address_component_from_google_geocode: function(a){
			for(varb={
				
			},
			c=a.length-1;c>=0;c--){
				vard=a[c];d.types.indexOf("postal_code")>=0?b.postalCode=d.short_name: d.types.indexOf("street_number")>=0?b.streetNumber=d.short_name: d.types.indexOf("route")>=0?b.streetName=d.short_name: d.types.indexOf("locality")>=0?b.city=d.short_name: d.types.indexOf("sublocality")>=0?b.district=d.short_name: d.types.indexOf("administrative_area_level_1")>=0?b.stateOrProvince=d.short_name: d.types.indexOf("country")>=0&&(b.country=d.short_name)
			}returnb.addressLine1=[b.streetNumber,
			b.streetName].join(" ").trim(),
			b.addressLine2="",
			b
		}
	};a.fn.locationpicker=function(j,
	k){
		if("string"==typeofj){
			varl=this.get(0);if(!c(l))return;varm=d(l);switch(j){
				case"location": if(void0==k){
					varn=i.locationFromLatLng(m.location);returnn.radius=m.radius,
					n.name=m.locationName,
					n
				}k.radius&&(m.radius=k.radius),
				i.setPosition(m,
				newgoogle.maps.LatLng(k.latitude,
				k.longitude),
				function(a){
					e(a.settings.inputBinding,
					a)
				});break;case"subscribe": if(void0==k)returnnull;varo=k.event,
				p=k.callback;if(!o||!p)returnconsole.error('LocationPicker: Invalidargumentsformethod"subscribe"'),
				null;google.maps.event.addListener(m.map,
				o,
				p);break;case"map": if(void0==k){
					varq=i.locationFromLatLng(m.location);returnq.formattedAddress=m.locationName,
					q.addressComponents=m.addressComponents,
					{
						map: m.map,
						marker: m.marker,
						location: q
					}
				}returnnull;case"autosize": returng(m),
				this
			}returnnull
		}returnthis.each(function(){
			functiong(){
				i.setPosition(m,
				m.marker.position,
				function(a){
					varb=i.locationFromLatLng(m.location);e(m.settings.inputBinding,
					m),
					a.settings.onchanged.apply(m.domContainer,
					[b,
					a.radius,
					!0])
				})
			}vark=a(this);if(c(this))returnvoidh(d(this),
			a(this),
			j);varl=a.extend({
				
			},
			a.fn.locationpicker.defaults,
			j),
			m=newb(this,
			a.extend({
				
			},
			l.mapOptions,
			{
				zoom: l.zoom,
				center: newgoogle.maps.LatLng(l.location.latitude,
				l.location.longitude),
				mapTypeId: l.mapTypeId,
				mapTypeControl: !1,
				styles: l.styles,
				disableDoubleClickZoom: !1,
				scrollwheel: l.scrollwheel,
				streetViewControl: !1,
				radius: l.radius,
				locationName: l.locationName,
				settings: l,
				autocompleteOptions: l.autocompleteOptions,
				addressFormat: l.addressFormat,
				draggable: l.draggable,
				markerIcon: l.markerIcon,
				markerDraggable: l.markerDraggable,
				markerVisible: l.markerVisible
			}));k.data("locationpicker",
			m),
			l.markerInCenter&&(m.map.addListener("bounds_changed",
			function(){
				m.marker.dragging||(m.marker.setPosition(m.map.center),
				e(m.settings.inputBinding,
				m))
			}),
			m.map.addListener("idle",
			function(){
				m.marker.dragging||g()
			})),
			google.maps.event.addListener(m.marker,
			"drag",
			function(){
				e(m.settings.inputBinding,
				m)
			}),
			google.maps.event.addListener(m.marker,
			"dragend",
			function(){
				g()
			}),
			i.setPosition(m,
			newgoogle.maps.LatLng(l.location.latitude,
			l.location.longitude),
			function(a){
				e(l.inputBinding,
				m),
				f(l.inputBinding,
				m),
				a.settings.oninitialized(k)
			})
		})
	},
	a.fn.locationpicker.defaults={
		location: {
			latitude: 40.7324319,
			longitude: -73.82480777777776
		},
		locationName: "",
		radius: 500,
		zoom: 15,
		mapTypeId: google.maps.MapTypeId.ROADMAP,
		styles: [],
		mapOptions: {
			
		},
		scrollwheel: !0,
		inputBinding: {
			latitudeInput: null,
			longitudeInput: null,
			radiusInput: null,
			locationNameInput: null
		},
		enableAutocomplete: !1,
		enableAutocompleteBlur: !1,
		autocompleteOptions: null,
		addressFormat: "postal_code",
		enableReverseGeocode: !0,
		draggable: !0,
		onchanged: function(){
			
		},
		onlocationnotfound: function(){
			
		},
		oninitialized: function(){
			
		},
		markerIcon: void0,
		markerDraggable: !0,
		markerVisible: !0
	}
}(jQuery);//#sourceMappingURL=locationpicker.jquery.min.js.map